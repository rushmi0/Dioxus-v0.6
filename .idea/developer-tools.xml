<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="DeveloperToolsToolWindowSettingsV1" lastSelectedContentNodeId="notes">
    <developerToolsConfigurations>
      <developerToolConfiguration developerToolId="notes" id="18d12207-258c-4050-b663-ef79ea3a2055" name="Workbench">
        <properties>
          <property key="test" type="INPUT" value="kotlin.String|แก้ไขข้อผิดพลาดอย่างไร&#10;&#10;&#10;// main.rs&#10;#![allow(non_snake_case)]&#10;&#10;use dioxus::prelude::*;&#10;use dioxus_logger::tracing::{info, Level};&#10;&#10;fn main() {&#10;    // Init logger&#10;    dioxus_logger::init(Level::INFO).expect(&quot;failed to init logger&quot;);&#10;    info!(&quot;starting app&quot;);&#10;    launch(App);&#10;}&#10;&#10;// app.rs&#10;#[component]&#10;fn App() -&gt; Element {&#10;    // Build cool things ✌️&#10;&#10;    rsx! {&#10;        link { rel: &quot;stylesheet&quot;, href: &quot;main.css&quot; }&#10;        img { src: &quot;header.svg&quot;, id: &quot;header&quot; }&#10;        div { id: &quot;links&quot;,&#10;            a { target: &quot;_blank&quot;, href: &quot;https://dioxuslabs.com/learn/0.5/&quot;, &quot;📚 Learn Dioxus&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://dioxuslabs.com/awesome&quot;, &quot;🚀 Awesome Dioxus&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://github.com/dioxus-community/&quot;, &quot;📡 Community Libraries&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://github.com/DioxusLabs/dioxus-std&quot;, &quot;⚙️ Dioxus Standard Library&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://marketplace.visualstudio.com/items?itemName=DioxusLabs.dioxus&quot;, &quot;💫 VSCode Extension&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://discord.gg/XgGxMSkvUM&quot;, &quot;👋 Community Discord&quot; }&#10;        }&#10;&#10;    }&#10;}" />
        </properties>
      </developerToolConfiguration>
      <developerToolConfiguration developerToolId="notes" id="80f7c27f-549e-4a44-a867-5220dfd8edea" name="Workbench">
        <properties>
          <property key="test" type="INPUT" value="kotlin.String|แก้ไข error ที่คำสั่ง launch(App); อย่างไร&#10;&#10;&#10;// main.rs&#10;#![allow(non_snake_case)]&#10;&#10;mod app;&#10;&#10;use dioxus::prelude::*;&#10;use tracing::info;&#10;use tracing_subscriber::FmtSubscriber;&#10;&#10;fn main() {&#10;    // Initialize the logger&#10;    let subscriber = FmtSubscriber::builder()&#10;        .with_max_level(tracing::Level::INFO)&#10;        .finish();&#10;    tracing::subscriber::set_global_default(subscriber).expect(&quot;setting default subscriber failed&quot;);&#10;&#10;    info!(&quot;starting app&quot;);&#10;    launch(App);&#10;}&#10;&#10;&#10;// app.rs&#10;use dioxus::prelude::*;&#10;&#10;#[component]&#10;fn App() -&gt; Element {&#10;    // Build cool things ✌️&#10;&#10;    rsx! {&#10;        link { rel: &quot;stylesheet&quot;, href: &quot;main.css&quot; }&#10;        img { src: &quot;header.svg&quot;, id: &quot;header&quot; }&#10;        div { id: &quot;links&quot;,&#10;            a { target: &quot;_blank&quot;, href: &quot;https://dioxuslabs.com/learn/0.5/&quot;, &quot;📚 Learn Dioxus&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://dioxuslabs.com/awesome&quot;, &quot;🚀 Awesome Dioxus&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://github.com/dioxus-community/&quot;, &quot;📡 Community Libraries&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://github.com/DioxusLabs/dioxus-std&quot;, &quot;⚙️ Dioxus Standard Library&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://marketplace.visualstudio.com/items?itemName=DioxusLabs.dioxus&quot;, &quot;💫 VSCode Extension&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://discord.gg/XgGxMSkvUM&quot;, &quot;👋 Community Discord&quot; }&#10;        }&#10;&#10;    }&#10;}" />
        </properties>
      </developerToolConfiguration>
      <developerToolConfiguration developerToolId="notes" id="0c9f6be5-5fac-4ee6-b08d-4c6250afc018" name="Workbench">
        <properties>
          <property key="test" type="INPUT" value="kotlin.String|ทำไม main.rs ไม่สามารถเรียกใช้ pub mod app; ได้ล่ะ ต้องแก้ไขอย่างไรให้ main ของเห็น lib ได้&#10;&#10;// main.rs&#10;#![allow(non_snake_case)]&#10;&#10;use dioxus::prelude::*;&#10;use dioxus_logger::tracing::{info, Level};&#10;&#10;use app::App;&#10;&#10;fn main() {&#10;    // Init logger&#10;    dioxus_logger::init(Level::INFO).expect(&quot;failed to init logger&quot;);&#10;    info!(&quot;starting app&quot;);&#10;    launch(App);&#10;}&#10;&#10;// app.rs&#10;use dioxus::prelude::*;&#10;&#10;#[component]&#10;pub fn App() -&gt; Element {&#10;    rsx! {&#10;        link { rel: &quot;stylesheet&quot;, href: &quot;main.css&quot; }&#10;        img { src: &quot;header.svg&quot;, id: &quot;header&quot; }&#10;        div { id: &quot;links&quot;,&#10;            a { target: &quot;_blank&quot;, href: &quot;https://dioxuslabs.com/learn/0.5/&quot;, &quot;📚 Learn Dioxus&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://dioxuslabs.com/awesome&quot;, &quot;🚀 Awesome Dioxus&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://github.com/dioxus-community/&quot;, &quot;📡 Community Libraries&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://github.com/DioxusLabs/dioxus-std&quot;, &quot;⚙️ Dioxus Standard Library&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://marketplace.visualstudio.com/items?itemName=DioxusLabs.dioxus&quot;, &quot;💫 VSCode Extension&quot; }&#10;            a { target: &quot;_blank&quot;, href: &quot;https://discord.gg/XgGxMSkvUM&quot;, &quot;👋 Community Discord&quot; }&#10;        }&#10;&#10;    }&#10;}&#10;&#10;&#10;// lib.rs&#10;pub mod app;" />
        </properties>
      </developerToolConfiguration>
      <developerToolConfiguration developerToolId="notes" id="10d2f566-849f-407b-b357-e9880f980c8c" name="Workbench">
        <properties>
          <property key="test" type="INPUT" value="kotlin.String|นี้คือโครงสร้างโปรเจคของผม เพื่อใช้เขียน rust webassembly ต้องกำหนดค่า Dioxus.toml อย่างไร ให้สามารถเรียกใช้ไฟล์ .css ไดดจาก src/styles&#10;&#10;const STYLE: &amp;str = manganis::mg!(file(&quot;styles/main.css&quot;));&#10;C:.&#10;│   .gitignore&#10;│   Cargo.lock&#10;│   Cargo.toml&#10;│   Dioxus.toml&#10;│   input.css&#10;│   LICENSE&#10;│   package-lock.json&#10;│   package.json&#10;│   README.md&#10;│   tailwind.config.js&#10;│&#10;├───.idea&#10;│       .gitignore&#10;│       developer-tools.xml&#10;│       modules.xml&#10;│       rust-webassembly.iml&#10;│       vcs.xml&#10;│       workspace.xml&#10;│&#10;├───.vscode&#10;│       settings.json&#10;│&#10;├───public&#10;│       tailwind.css&#10;│&#10;└───src&#10;    │   app.rs&#10;    │   main.rs&#10;    │&#10;    ├───assets&#10;    │       favicon.ico&#10;    │       header.svg&#10;    │&#10;    ├───page&#10;    │       home_page.rs&#10;    │       mod.rs&#10;    │&#10;    └───styles&#10;            main.css&#10;&#10;&#10;ละนี้คือรูปแบบไฟล์กำหนดค่า Dioxus.toml จากตัวอย่าง&#10;[application]&#10;&#10;# App name&#10;name = &quot;project_name&quot;&#10;&#10;# The Dioxus platform to default to&#10;default_platform = &quot;web&quot;&#10;&#10;# `build` &amp; `serve` output path&#10;out_dir = &quot;dist&quot;&#10;&#10;# The static resource path&#10;asset_dir = &quot;public&quot;&#10;&#10;[web.app]&#10;&#10;# HTML title tag content&#10;title = &quot;project_name&quot;&#10;&#10;[web.watcher]&#10;&#10;# When watcher is triggered, regenerate the `index.html`&#10;reload_html = true&#10;&#10;# Which files or dirs will be monitored&#10;watch_path = [&quot;src&quot;, &quot;public&quot;]&#10;&#10;# Include style or script assets&#10;[web.resource]&#10;&#10;# CSS style file&#10;style = []&#10;&#10;# Javascript code file&#10;script = []&#10;&#10;[web.resource.dev]&#10;&#10;# Same as [web.resource], but for development servers&#10;&#10;# CSS style file&#10;style = []&#10;&#10;# JavaScript files&#10;script = []&#10;&#10;[[web.proxy]]&#10;backend = &quot;http://localhost:8000/api/&quot;&#10;&#10;&#10;และนี้คือไฟล์กำหนดค่าของผม&#10;[application]&#10;&#10;# App (Project) Name&#10;name = &quot;rust-webassembly&quot;&#10;&#10;# Dioxus App Default Platform&#10;# web, desktop, fullstack&#10;default_platform = &quot;web&quot;&#10;&#10;# `build` &amp; `serve` dist path&#10;out_dir = &quot;dist&quot;&#10;&#10;# resource (assets) file folder&#10;asset_dir = &quot;src/assets&quot;&#10;&#10;[web.app]&#10;&#10;# HTML title tag content&#10;title = &quot;rust-webassembly&quot;&#10;&#10;[web.watcher]&#10;&#10;# when watcher trigger, regenerate the `index.html`&#10;reload_html = true&#10;&#10;# which files or dirs will be watcher monitoring&#10;watch_path = [&quot;src&quot;, &quot;assets&quot;, &quot;styles&quot;, &quot;public&quot;]&#10;&#10;# include `assets` in web platform&#10;[web.resource]&#10;&#10;# CSS style file&#10;style = [&#10;    # Include from public_dir.&#10;    &quot;.src/styles/main.css&quot;,&#10;    # Or some asset from online cdn.&#10;    &quot;https://cdn.jsdelivr.net/npm/bootstrap/dist/css/bootstrap.css&quot;&#10;]&#10;&#10;&#10;&#10;# Javascript code file&#10;script = []&#10;&#10;[web.resource.dev]&#10;&#10;# Javascript code file&#10;# serve: [dev-server] only&#10;script = []&#10;" />
        </properties>
      </developerToolConfiguration>
    </developerToolsConfigurations>
    <expandedGroupNodeIds />
  </component>
</project>